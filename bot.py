import asyncio
import requests
import time
from datetime import time
from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart
from aiogram.filters.command import Command
from aiogram.types import Message

from bd_config import User, Session, Task
from keyboard import create_main_keyboard

BOT_TOKEN = "6481132072:AAEcFRg5bH9eEgzUXHMdyzOkdTHClDAqrfw"
FLASK_URL = 'https://16ba-94-231-133-134.ngrok-free.app'
bot = Bot(BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher()


@dp.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    main_kb = create_main_keyboard(user_id, FLASK_URL)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    if not user_exists(user_id):
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        save_user(user_id, first_name)
        await message.reply("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å –≤—ã –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!ü§°")
    else:
        await message.reply("–í—ã —É–∂–µ –Ω–∞—à —á–µ–ª!üëå")

    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {first_name}!üòò', reply_markup=main_kb)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def user_exists(user_id):
    session = Session()
    user = session.query(User).filter_by(user_id=user_id).first()
    session.close()
    return user is not None


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def save_user(user_id, first_name):
    session = Session()
    new_user = User(user_id=user_id, user_name=first_name)
    session.add(new_user)
    session.commit()
    session.close()


async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
